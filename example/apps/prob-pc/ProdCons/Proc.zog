module: ProdCons.Proc
import:
- {module: Lib.Probes}

---
nodes:
  - name: Proc
    kind: PlatformNode
    target: {platform: unix-process, language: C} # More info?
    ports:
      - name: st_data
        dir: in
        data_type: {name: Tst.LinkData}
      - name: res
        dir: out
        data_type: {name: Tst.ResData}
      - {name: DFL_counter_flush, dir: in}
      - {name: DFL_counter_samples, dir: out}
        
    nodes:
      - name: Preproc
        kind: ActorNode
        description: "Proto-dataflow of NumCrunch Preproc"
        nodes:
          - name: preproc_native
            kind: KernelNode
            extern: !include {file: ../../kernels/Preproc.dfc}
            ports:
              - {name: st_data, dir: in}
              - name: out
                dir: out
                data_type: {name: Tst.IntermediateData}
                port_type: {type: assign}
      - name: Maincomp
        kind: ActorNode
        description: "Proto-dataflow of NumCrunch MainComp"
        nodes:
          - name: maincomp_native
            kind: KernelNode
            extern: !include {file: ../../kernels/MainComp.dfc}
            ports:
              - {name: in, dir: in, data_type: {name: Tst.IntermediateData}}
              - {name: res, dir: out, data_type: {name: Tst.ResData}}
      - !attach
        name: counter
        ref: !ref {module: Lib.Probes, path: "/nodes[CounterProbe]"}
        parameters:
          probe-name: "Preproc-sched-pkts"
    edges:
      - connect: [".", st_data, Preproc/preproc_native, st_data]
      # - connect: [PreAndMain/preproc, out, PreAndMain/maincomp, in]
      - connect: [Preproc/preproc_native, out, counter, monitored_input]
      - connect: [counter, bypassed_data,  Maincomp/maincomp_native, in]       
      - connect: [Maincomp/maincomp_native, res, ".", res]
      - connect: [".", DFL_counter_flush, counter, DFL_counter_flush]
      - connect: [counter, DFL_counter_samples, ".", DFL_counter_samples]
