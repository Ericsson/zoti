import Common as Cmn;
import Res;

Tst: module {
  LinkData: structure {
    id:       Cmn.StreamId;
    data:     array(range: 1..100) Res.Sample;
  };

  PredefLinkData: structure {
    data:     array(100) Res.Sample;
  };

  StreamData: structure {
    id:       Cmn.StreamId;
    tslot:    Cmn.TimeSlot;
    data:     array(range: 1..100) Res.Sample;
  };

  IntermediateData: array(range: 1..100) Res.InterSample;

  ResData: structure {
    length:   integer(range: 1..100; bit-size: 16);
    data:     array(100) integer(0..0xFFFFFFFF);
  };

  StreamSched: structure {
    id:       Cmn.StreamId;
    tslot:    Cmn.TimeSlot;
    length:   integer(1..1400);
  };

  ComputeSched: structure {
    id:       Cmn.StreamId;
    tslot:    Cmn.TimeSlot;
    offset:   integer(0..39);
    length:   integer(1..1400);
  };

  BufferReport: structure {
    id:       Cmn.StreamId;
    pending:  integer(0..1000000);
  };
};
