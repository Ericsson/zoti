module: ProdCons.Src
---
nodes:
- name: Src
  description: "Proto-dataflow of Src"
  kind: PlatformNode
  target: {platform: unix-process, language: C} # More info?
  ports:
    - name: trig
      kind: in
      data_type: {name: Common.Timestamp}       # relevant to KernelNode
      port_type: {external_name: trig}
    - name: data
      kind: out
      data_type: {name: Tst.LinkData}
  nodes:
    - name: Src
      description: "Proto-dataflow of Src_compute"
      kind: ActorNode
      nodes:                                    # default detector and flows
        - name: src_native
          kind: KernelNode
          extern: !include {file: ../../kernels/Src.dfc}
          ports:
            - name: trig                            # props from connection
              kind: in
            - name: data                            # props from connection
              kind: out
            - name: inited
              kind: side
              port_type: {type: assign}
              data_type: {name: Common.Boolean, value: "false"}
            - name: predef_data 
              kind: side
              port_type: {type: assign}
              data_type: {name: Tst.PredefLinkData}
      # One way to ensure visibility of SIDE ports at actor level is
      # to connect them to "DROP" nodes and let the parser do the
      # instantiations
    - {name: null1, kind: BasicNode, type: DROP}
    - {name: null2, kind: BasicNode, type: DROP}
  edges:
    - connect: [.,               trig,         Src/src_native,  trig]
    - connect: [Src/src_native,  data,         .,               data]
    - connect: [Src/src_native,  inited,       null1,           null]
    - connect: [Src/src_native,  predef_data,  null2,           null]

